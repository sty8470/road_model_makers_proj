# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_layout.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1358, 669)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.main_widget_layout = QtWidgets.QHBoxLayout()
        self.main_widget_layout.setSpacing(10)
        self.main_widget_layout.setObjectName("main_widget_layout")
        self.frame_1 = QtWidgets.QFrame(self.centralwidget)
        self.frame_1.setObjectName("frame_1")
        self.data_layout = QtWidgets.QVBoxLayout(self.frame_1)
        self.data_layout.setContentsMargins(0, 0, 0, 0)
        self.data_layout.setObjectName("data_layout")
        self.treeWidget_data = QtWidgets.QTreeWidget(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_data.sizePolicy().hasHeightForWidth())
        self.treeWidget_data.setSizePolicy(sizePolicy)
        self.treeWidget_data.setObjectName("treeWidget_data")
        self.data_layout.addWidget(self.treeWidget_data)
        self.treeWidget_style = QtWidgets.QTreeWidget(self.frame_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_style.sizePolicy().hasHeightForWidth())
        self.treeWidget_style.setSizePolicy(sizePolicy)
        self.treeWidget_style.setObjectName("treeWidget_style")
        self.data_layout.addWidget(self.treeWidget_style)
        self.main_widget_layout.addWidget(self.frame_1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_mainwidget = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_mainwidget.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout_mainwidget.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_mainwidget.setSpacing(10)
        self.verticalLayout_mainwidget.setObjectName("verticalLayout_mainwidget")
        self.horizontalLayout_toolbar = QtWidgets.QHBoxLayout()
        self.horizontalLayout_toolbar.setObjectName("horizontalLayout_toolbar")
        self.btn_create_junction = QtWidgets.QPushButton(self.frame_2)
        self.btn_create_junction.setObjectName("btn_create_junction")
        self.horizontalLayout_toolbar.addWidget(self.btn_create_junction)
        self.btn_add_line = QtWidgets.QPushButton(self.frame_2)
        self.btn_add_line.setObjectName("btn_add_line")
        self.horizontalLayout_toolbar.addWidget(self.btn_add_line)
        self.btn_add_poly3 = QtWidgets.QPushButton(self.frame_2)
        self.btn_add_poly3.setObjectName("btn_add_poly3")
        self.horizontalLayout_toolbar.addWidget(self.btn_add_poly3)
        self.btn_merge_links = QtWidgets.QPushButton(self.frame_2)
        self.btn_merge_links.setObjectName("btn_merge_links")
        self.horizontalLayout_toolbar.addWidget(self.btn_merge_links)
        self.btn_connect_nodes = QtWidgets.QPushButton(self.frame_2)
        self.btn_connect_nodes.setObjectName("btn_connect_nodes")
        self.horizontalLayout_toolbar.addWidget(self.btn_connect_nodes)
        self.btn_divide_a_link = QtWidgets.QPushButton(self.frame_2)
        self.btn_divide_a_link.setObjectName("btn_divide_a_link")
        self.horizontalLayout_toolbar.addWidget(self.btn_divide_a_link)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_toolbar.addItem(spacerItem)
        self.verticalLayout_mainwidget.addLayout(self.horizontalLayout_toolbar)
        self.horizontalLayout_veiwbar = QtWidgets.QHBoxLayout()
        self.horizontalLayout_veiwbar.setObjectName("horizontalLayout_veiwbar")
        self.rbtn_view_select = QtWidgets.QRadioButton(self.frame_2)
        self.rbtn_view_select.setObjectName("rbtn_view_select")
        self.horizontalLayout_veiwbar.addWidget(self.rbtn_view_select)
        self.rbtn_view_trans = QtWidgets.QRadioButton(self.frame_2)
        self.rbtn_view_trans.setStyleSheet("")
        self.rbtn_view_trans.setChecked(True)
        self.rbtn_view_trans.setObjectName("rbtn_view_trans")
        self.horizontalLayout_veiwbar.addWidget(self.rbtn_view_trans)
        self.rbtn_view_rotate = QtWidgets.QRadioButton(self.frame_2)
        self.rbtn_view_rotate.setObjectName("rbtn_view_rotate")
        self.horizontalLayout_veiwbar.addWidget(self.rbtn_view_rotate)
        self.btn_view_xy = QtWidgets.QPushButton(self.frame_2)
        self.btn_view_xy.setObjectName("btn_view_xy")
        self.horizontalLayout_veiwbar.addWidget(self.btn_view_xy)
        self.btn_view_yz = QtWidgets.QPushButton(self.frame_2)
        self.btn_view_yz.setObjectName("btn_view_yz")
        self.horizontalLayout_veiwbar.addWidget(self.btn_view_yz)
        self.btn_view_zx = QtWidgets.QPushButton(self.frame_2)
        self.btn_view_zx.setObjectName("btn_view_zx")
        self.horizontalLayout_veiwbar.addWidget(self.btn_view_zx)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_veiwbar.addItem(spacerItem1)
        self.verticalLayout_mainwidget.addLayout(self.horizontalLayout_veiwbar)
        self.verticalLayout_opengl = QtWidgets.QVBoxLayout()
        self.verticalLayout_opengl.setObjectName("verticalLayout_opengl")
        self.verticalLayout_mainwidget.addLayout(self.verticalLayout_opengl)
        self.verticalLayout_rotation = QtWidgets.QVBoxLayout()
        self.verticalLayout_rotation.setSpacing(0)
        self.verticalLayout_rotation.setObjectName("verticalLayout_rotation")
        self.horizontalLayout_rotation_x = QtWidgets.QHBoxLayout()
        self.horizontalLayout_rotation_x.setSpacing(10)
        self.horizontalLayout_rotation_x.setObjectName("horizontalLayout_rotation_x")
        self.label_x = QtWidgets.QLabel(self.frame_2)
        self.label_x.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_x.setAlignment(QtCore.Qt.AlignCenter)
        self.label_x.setObjectName("label_x")
        self.horizontalLayout_rotation_x.addWidget(self.label_x)
        self.slider_x = QtWidgets.QSlider(self.frame_2)
        self.slider_x.setMinimum(-180)
        self.slider_x.setMaximum(180)
        self.slider_x.setOrientation(QtCore.Qt.Horizontal)
        self.slider_x.setObjectName("slider_x")
        self.horizontalLayout_rotation_x.addWidget(self.slider_x)
        self.edit_xRot = QtWidgets.QLineEdit(self.frame_2)
        self.edit_xRot.setAlignment(QtCore.Qt.AlignCenter)
        self.edit_xRot.setObjectName("edit_xRot")
        self.horizontalLayout_rotation_x.addWidget(self.edit_xRot)
        self.reset_xRot = QtWidgets.QPushButton(self.frame_2)
        self.reset_xRot.setObjectName("reset_xRot")
        self.horizontalLayout_rotation_x.addWidget(self.reset_xRot)
        self.horizontalLayout_rotation_x.setStretch(0, 1)
        self.horizontalLayout_rotation_x.setStretch(1, 7)
        self.horizontalLayout_rotation_x.setStretch(2, 1)
        self.horizontalLayout_rotation_x.setStretch(3, 1)
        self.verticalLayout_rotation.addLayout(self.horizontalLayout_rotation_x)
        self.horizontalLayout_rotation_y = QtWidgets.QHBoxLayout()
        self.horizontalLayout_rotation_y.setSpacing(10)
        self.horizontalLayout_rotation_y.setObjectName("horizontalLayout_rotation_y")
        self.label_y = QtWidgets.QLabel(self.frame_2)
        self.label_y.setAlignment(QtCore.Qt.AlignCenter)
        self.label_y.setObjectName("label_y")
        self.horizontalLayout_rotation_y.addWidget(self.label_y)
        self.slider_y = QtWidgets.QSlider(self.frame_2)
        self.slider_y.setMinimum(-180)
        self.slider_y.setMaximum(180)
        self.slider_y.setOrientation(QtCore.Qt.Horizontal)
        self.slider_y.setObjectName("slider_y")
        self.horizontalLayout_rotation_y.addWidget(self.slider_y)
        self.edit_yRot = QtWidgets.QLineEdit(self.frame_2)
        self.edit_yRot.setAlignment(QtCore.Qt.AlignCenter)
        self.edit_yRot.setObjectName("edit_yRot")
        self.horizontalLayout_rotation_y.addWidget(self.edit_yRot)
        self.reset_yRot = QtWidgets.QPushButton(self.frame_2)
        self.reset_yRot.setObjectName("reset_yRot")
        self.horizontalLayout_rotation_y.addWidget(self.reset_yRot)
        self.horizontalLayout_rotation_y.setStretch(0, 1)
        self.horizontalLayout_rotation_y.setStretch(1, 7)
        self.horizontalLayout_rotation_y.setStretch(2, 1)
        self.horizontalLayout_rotation_y.setStretch(3, 1)
        self.verticalLayout_rotation.addLayout(self.horizontalLayout_rotation_y)
        self.horizontalLayout_rotation_z = QtWidgets.QHBoxLayout()
        self.horizontalLayout_rotation_z.setSpacing(10)
        self.horizontalLayout_rotation_z.setObjectName("horizontalLayout_rotation_z")
        self.label_z = QtWidgets.QLabel(self.frame_2)
        self.label_z.setAlignment(QtCore.Qt.AlignCenter)
        self.label_z.setObjectName("label_z")
        self.horizontalLayout_rotation_z.addWidget(self.label_z)
        self.slider_z = QtWidgets.QSlider(self.frame_2)
        self.slider_z.setMinimum(-180)
        self.slider_z.setMaximum(180)
        self.slider_z.setOrientation(QtCore.Qt.Horizontal)
        self.slider_z.setObjectName("slider_z")
        self.horizontalLayout_rotation_z.addWidget(self.slider_z)
        self.edit_zRot = QtWidgets.QLineEdit(self.frame_2)
        self.edit_zRot.setAlignment(QtCore.Qt.AlignCenter)
        self.edit_zRot.setObjectName("edit_zRot")
        self.horizontalLayout_rotation_z.addWidget(self.edit_zRot)
        self.reset_zRot = QtWidgets.QPushButton(self.frame_2)
        self.reset_zRot.setObjectName("reset_zRot")
        self.horizontalLayout_rotation_z.addWidget(self.reset_zRot)
        self.horizontalLayout_rotation_z.setStretch(0, 1)
        self.horizontalLayout_rotation_z.setStretch(1, 7)
        self.horizontalLayout_rotation_z.setStretch(2, 1)
        self.horizontalLayout_rotation_z.setStretch(3, 1)
        self.verticalLayout_rotation.addLayout(self.horizontalLayout_rotation_z)
        self.verticalLayout_mainwidget.addLayout(self.verticalLayout_rotation)
        self.horizontalLayout_log = QtWidgets.QHBoxLayout()
        self.horizontalLayout_log.setObjectName("horizontalLayout_log")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_log.addItem(spacerItem2)
        self.label_range_x = QtWidgets.QLabel(self.frame_2)
        self.label_range_x.setObjectName("label_range_x")
        self.horizontalLayout_log.addWidget(self.label_range_x)
        self.line_1 = QtWidgets.QFrame(self.frame_2)
        self.line_1.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_1.setObjectName("line_1")
        self.horizontalLayout_log.addWidget(self.line_1)
        self.label_range_y = QtWidgets.QLabel(self.frame_2)
        self.label_range_y.setObjectName("label_range_y")
        self.horizontalLayout_log.addWidget(self.label_range_y)
        self.line_2 = QtWidgets.QFrame(self.frame_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_log.addWidget(self.line_2)
        self.label_zoom = QtWidgets.QLabel(self.frame_2)
        self.label_zoom.setObjectName("label_zoom")
        self.horizontalLayout_log.addWidget(self.label_zoom)
        self.line_3 = QtWidgets.QFrame(self.frame_2)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_log.addWidget(self.line_3)
        self.verticalLayout_mainwidget.addLayout(self.horizontalLayout_log)
        self.verticalLayout_mainwidget.setStretch(2, 10)
        self.main_widget_layout.addWidget(self.frame_2)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setObjectName("frame_3")
        self.attri_layout = QtWidgets.QVBoxLayout(self.frame_3)
        self.attri_layout.setContentsMargins(0, 0, 0, 0)
        self.attri_layout.setObjectName("attri_layout")
        self.treeWidget_attr = QtWidgets.QTreeWidget(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_attr.sizePolicy().hasHeightForWidth())
        self.treeWidget_attr.setSizePolicy(sizePolicy)
        self.treeWidget_attr.setMinimumSize(QtCore.QSize(310, 0))
        self.treeWidget_attr.setObjectName("treeWidget_attr")
        self.attri_layout.addWidget(self.treeWidget_attr)
        self.main_widget_layout.addWidget(self.frame_3)
        self.main_widget_layout.setStretch(0, 1)
        self.main_widget_layout.setStretch(1, 8)
        self.main_widget_layout.setStretch(2, 1)
        self.verticalLayout.addLayout(self.main_widget_layout)
        self.frame_log = QtWidgets.QFrame(self.centralwidget)
        self.frame_log.setObjectName("frame_log")
        self.log_widget_layout = QtWidgets.QVBoxLayout(self.frame_log)
        self.log_widget_layout.setContentsMargins(0, 0, 0, 0)
        self.log_widget_layout.setObjectName("log_widget_layout")
        self.verticalLayout.addWidget(self.frame_log)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1358, 21))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(self.menubar)
        self.menuFiles.setObjectName("menuFiles")
        self.menuImport = QtWidgets.QMenu(self.menubar)
        self.menuImport.setObjectName("menuImport")
        self.menuFind = QtWidgets.QMenu(self.menubar)
        self.menuFind.setObjectName("menuFind")
        self.menuData_Integrity = QtWidgets.QMenu(self.menubar)
        self.menuData_Integrity.setObjectName("menuData_Integrity")
        self.menuData_Trimming = QtWidgets.QMenu(self.menubar)
        self.menuData_Trimming.setObjectName("menuData_Trimming")
        self.menuOpenDRIVE_Conversion = QtWidgets.QMenu(self.menubar)
        self.menuOpenDRIVE_Conversion.setObjectName("menuOpenDRIVE_Conversion")
        self.menuBasic_Editing = QtWidgets.QMenu(self.menubar)
        self.menuBasic_Editing.setObjectName("menuBasic_Editing")
        self.menuMisc = QtWidgets.QMenu(self.menubar)
        self.menuMisc.setObjectName("menuMisc")
        self.menuCurve_Fitting = QtWidgets.QMenu(self.menubar)
        self.menuCurve_Fitting.setObjectName("menuCurve_Fitting")
        self.menuExport = QtWidgets.QMenu(self.menubar)
        self.menuExport.setObjectName("menuExport")
        MainWindow.setMenuBar(self.menubar)
        self.action_load_mgeo = QtWidgets.QAction(MainWindow)
        self.action_load_mgeo.setObjectName("action_load_mgeo")
        self.action_save_mgeo = QtWidgets.QAction(MainWindow)
        self.action_save_mgeo.setObjectName("action_save_mgeo")
        self.action_exit = QtWidgets.QAction(MainWindow)
        self.action_exit.setObjectName("action_exit")
        self.action_import_42dot = QtWidgets.QAction(MainWindow)
        self.action_import_42dot.setObjectName("action_import_42dot")
        self.action_export_odr_2 = QtWidgets.QAction(MainWindow)
        self.action_export_odr_2.setObjectName("action_export_odr_2")
        self.actionXY = QtWidgets.QAction(MainWindow)
        self.actionXY.setObjectName("actionXY")
        self.actionYZ = QtWidgets.QAction(MainWindow)
        self.actionYZ.setObjectName("actionYZ")
        self.actionZX = QtWidgets.QAction(MainWindow)
        self.actionZX.setObjectName("actionZX")
        self.actionSoftware_Information = QtWidgets.QAction(MainWindow)
        self.actionSoftware_Information.setObjectName("actionSoftware_Information")
        self.action_node = QtWidgets.QAction(MainWindow)
        self.action_node.setObjectName("action_node")
        self.action_link = QtWidgets.QAction(MainWindow)
        self.action_link.setObjectName("action_link")
        self.action_find_overlapped_node = QtWidgets.QAction(MainWindow)
        self.action_find_overlapped_node.setObjectName("action_find_overlapped_node")
        self.action_repair_overlapped_node = QtWidgets.QAction(MainWindow)
        self.action_repair_overlapped_node.setObjectName("action_repair_overlapped_node")
        self.action_find_dangling_nodes = QtWidgets.QAction(MainWindow)
        self.action_find_dangling_nodes.setObjectName("action_find_dangling_nodes")
        self.action_delete_dangling_nodes = QtWidgets.QAction(MainWindow)
        self.action_delete_dangling_nodes.setObjectName("action_delete_dangling_nodes")
        self.action_clear = QtWidgets.QAction(MainWindow)
        self.action_clear.setObjectName("action_clear")
        self.action_delete_Objects_out_of_XY_Range_soft = QtWidgets.QAction(MainWindow)
        self.action_delete_Objects_out_of_XY_Range_soft.setObjectName("action_delete_Objects_out_of_XY_Range_soft")
        self.action_delete_Objects_inside_this_Screen = QtWidgets.QAction(MainWindow)
        self.action_delete_Objects_inside_this_Screen.setObjectName("action_delete_Objects_inside_this_Screen")
        self.action_add_poly3 = QtWidgets.QAction(MainWindow)
        self.action_add_poly3.setObjectName("action_add_poly3")
        self.action_ts = QtWidgets.QAction(MainWindow)
        self.action_ts.setObjectName("action_ts")
        self.action_tl = QtWidgets.QAction(MainWindow)
        self.action_tl.setObjectName("action_tl")
        self.action_jct = QtWidgets.QAction(MainWindow)
        self.action_jct.setObjectName("action_jct")
        self.action_add_line = QtWidgets.QAction(MainWindow)
        self.action_add_line.setObjectName("action_add_line")
        self.action_delete_current_point = QtWidgets.QAction(MainWindow)
        self.action_delete_current_point.setObjectName("action_delete_current_point")
        self.action_delete_all_points = QtWidgets.QAction(MainWindow)
        self.action_delete_all_points.setObjectName("action_delete_all_points")
        self.actionMerge_Selected = QtWidgets.QAction(MainWindow)
        self.actionMerge_Selected.setObjectName("actionMerge_Selected")
        self.actionCreate_Junction = QtWidgets.QAction(MainWindow)
        self.actionCreate_Junction.setObjectName("actionCreate_Junction")
        self.actionDelete_Current_Junction = QtWidgets.QAction(MainWindow)
        self.actionDelete_Current_Junction.setObjectName("actionDelete_Current_Junction")
        self.action_create_preliminary_odr_roads = QtWidgets.QAction(MainWindow)
        self.action_create_preliminary_odr_roads.setObjectName("action_create_preliminary_odr_roads")
        self.action_create_junction = QtWidgets.QAction(MainWindow)
        self.action_create_junction.setObjectName("action_create_junction")
        self.action_delete_Objects_out_of_XY_Range_hard = QtWidgets.QAction(MainWindow)
        self.action_delete_Objects_out_of_XY_Range_hard.setObjectName("action_delete_Objects_out_of_XY_Range_hard")
        self.actionFind = QtWidgets.QAction(MainWindow)
        self.actionFind.setObjectName("actionFind")
        self.action_export_odr = QtWidgets.QAction(MainWindow)
        self.action_export_odr.setObjectName("action_export_odr")
        self.action_export_odr_signal_fix = QtWidgets.QAction(MainWindow)
        self.action_export_odr_signal_fix.setObjectName("action_export_odr_signal_fix")
        self.action_create_odr_roads = QtWidgets.QAction(MainWindow)
        self.action_create_odr_roads.setObjectName("action_create_odr_roads")
        self.action_create_road_objects_legacy = QtWidgets.QAction(MainWindow)
        self.action_create_road_objects_legacy.setObjectName("action_create_road_objects_legacy")
        self.action_export_odr_legacy = QtWidgets.QAction(MainWindow)
        self.action_export_odr_legacy.setObjectName("action_export_odr_legacy")
        self.action_create_opendrive = QtWidgets.QAction(MainWindow)
        self.action_create_opendrive.setObjectName("action_create_opendrive")
        self.action_create_opendrive_no_signal = QtWidgets.QAction(MainWindow)
        self.action_create_opendrive_no_signal.setObjectName("action_create_opendrive_no_signal")
        self.action_create_opendrive_fix_all_signal_road_id = QtWidgets.QAction(MainWindow)
        self.action_create_opendrive_fix_all_signal_road_id.setObjectName("action_create_opendrive_fix_all_signal_road_id")
        self.action_create_opendrive_legacy = QtWidgets.QAction(MainWindow)
        self.action_create_opendrive_legacy.setObjectName("action_create_opendrive_legacy")
        self.action_road = QtWidgets.QAction(MainWindow)
        self.action_road.setObjectName("action_road")
        self.action_change_ids_to_string = QtWidgets.QAction(MainWindow)
        self.action_change_ids_to_string.setObjectName("action_change_ids_to_string")
        self.action_find_closed_loop_link = QtWidgets.QAction(MainWindow)
        self.action_find_closed_loop_link.setObjectName("action_find_closed_loop_link")
        self.action_auto_generate_geometry_points = QtWidgets.QAction(MainWindow)
        self.action_auto_generate_geometry_points.setObjectName("action_auto_generate_geometry_points")
        self.action_merge_links = QtWidgets.QAction(MainWindow)
        self.action_merge_links.setObjectName("action_merge_links")
        self.action_connect_nodes = QtWidgets.QAction(MainWindow)
        self.action_connect_nodes.setObjectName("action_connect_nodes")
        self.action_divide_a_link_smart = QtWidgets.QAction(MainWindow)
        self.action_divide_a_link_smart.setObjectName("action_divide_a_link_smart")
        self.action_divide_a_link_keep_front = QtWidgets.QAction(MainWindow)
        self.action_divide_a_link_keep_front.setObjectName("action_divide_a_link_keep_front")
        self.action_divide_a_link_keep_rear = QtWidgets.QAction(MainWindow)
        self.action_divide_a_link_keep_rear.setObjectName("action_divide_a_link_keep_rear")
        self.action_add_link_point = QtWidgets.QAction(MainWindow)
        self.action_add_link_point.setObjectName("action_add_link_point")
        self.action_set_new_road_id = QtWidgets.QAction(MainWindow)
        self.action_set_new_road_id.setObjectName("action_set_new_road_id")
        self.action_clear_odr_roads = QtWidgets.QAction(MainWindow)
        self.action_clear_odr_roads.setObjectName("action_clear_odr_roads")
        self.action_get_position_in_carla = QtWidgets.QAction(MainWindow)
        self.action_get_position_in_carla.setObjectName("action_get_position_in_carla")
        self.action_change_node_link_height_to_0 = QtWidgets.QAction(MainWindow)
        self.action_change_node_link_height_to_0.setObjectName("action_change_node_link_height_to_0")
        self.action_import_42dot_legacy = QtWidgets.QAction(MainWindow)
        self.action_import_42dot_legacy.setObjectName("action_import_42dot_legacy")
        self.actionMerge_MGeo = QtWidgets.QAction(MainWindow)
        self.actionMerge_MGeo.setObjectName("actionMerge_MGeo")
        self.action_reset_all_points = QtWidgets.QAction(MainWindow)
        self.action_reset_all_points.setObjectName("action_reset_all_points")
        self.menuFiles.addAction(self.action_load_mgeo)
        self.menuFiles.addAction(self.action_save_mgeo)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionMerge_MGeo)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.action_exit)
        self.menuImport.addAction(self.action_import_42dot)
        self.menuImport.addAction(self.action_import_42dot_legacy)
        self.menuFind.addAction(self.actionFind)
        self.menuFind.addAction(self.action_node)
        self.menuFind.addAction(self.action_link)
        self.menuFind.addAction(self.action_ts)
        self.menuFind.addAction(self.action_tl)
        self.menuFind.addAction(self.action_jct)
        self.menuFind.addAction(self.action_road)
        self.menuData_Integrity.addAction(self.action_find_overlapped_node)
        self.menuData_Integrity.addAction(self.action_repair_overlapped_node)
        self.menuData_Integrity.addSeparator()
        self.menuData_Integrity.addAction(self.action_find_dangling_nodes)
        self.menuData_Integrity.addAction(self.action_delete_dangling_nodes)
        self.menuData_Integrity.addSeparator()
        self.menuData_Integrity.addAction(self.action_find_closed_loop_link)
        self.menuData_Integrity.addSeparator()
        self.menuData_Integrity.addAction(self.action_clear)
        self.menuData_Trimming.addAction(self.action_delete_Objects_out_of_XY_Range_soft)
        self.menuData_Trimming.addAction(self.action_delete_Objects_out_of_XY_Range_hard)
        self.menuData_Trimming.addAction(self.action_delete_Objects_inside_this_Screen)
        self.menuOpenDRIVE_Conversion.addAction(self.action_create_junction)
        self.menuOpenDRIVE_Conversion.addSeparator()
        self.menuOpenDRIVE_Conversion.addAction(self.action_create_preliminary_odr_roads)
        self.menuOpenDRIVE_Conversion.addAction(self.action_create_odr_roads)
        self.menuOpenDRIVE_Conversion.addSeparator()
        self.menuOpenDRIVE_Conversion.addAction(self.action_clear_odr_roads)
        self.menuOpenDRIVE_Conversion.addSeparator()
        self.menuOpenDRIVE_Conversion.addAction(self.action_create_opendrive)
        self.menuOpenDRIVE_Conversion.addSeparator()
        self.menuBasic_Editing.addAction(self.action_divide_a_link_smart)
        self.menuBasic_Editing.addAction(self.action_divide_a_link_keep_front)
        self.menuBasic_Editing.addAction(self.action_divide_a_link_keep_rear)
        self.menuBasic_Editing.addSeparator()
        self.menuBasic_Editing.addAction(self.action_set_new_road_id)
        self.menuBasic_Editing.addSeparator()
        self.menuBasic_Editing.addAction(self.action_add_link_point)
        self.menuBasic_Editing.addSeparator()
        self.menuBasic_Editing.addAction(self.action_merge_links)
        self.menuBasic_Editing.addSeparator()
        self.menuBasic_Editing.addAction(self.action_connect_nodes)
        self.menuBasic_Editing.addSeparator()
        self.menuMisc.addAction(self.action_get_position_in_carla)
        self.menuMisc.addSeparator()
        self.menuMisc.addAction(self.action_change_ids_to_string)
        self.menuMisc.addSeparator()
        self.menuMisc.addAction(self.action_change_node_link_height_to_0)
        self.menuCurve_Fitting.addAction(self.action_add_line)
        self.menuCurve_Fitting.addAction(self.action_add_poly3)
        self.menuCurve_Fitting.addSeparator()
        self.menuCurve_Fitting.addAction(self.action_auto_generate_geometry_points)
        self.menuCurve_Fitting.addSeparator()
        self.menuCurve_Fitting.addAction(self.action_delete_current_point)
        self.menuCurve_Fitting.addAction(self.action_delete_all_points)
        self.menuCurve_Fitting.addAction(self.action_reset_all_points)
        self.menuCurve_Fitting.addSeparator()
        self.menuExport.addAction(self.action_export_odr_2)
        self.menubar.addAction(self.menuFiles.menuAction())
        self.menubar.addAction(self.menuImport.menuAction())
        self.menubar.addAction(self.menuExport.menuAction())
        self.menubar.addAction(self.menuFind.menuAction())
        self.menubar.addAction(self.menuBasic_Editing.menuAction())
        self.menubar.addAction(self.menuCurve_Fitting.menuAction())
        self.menubar.addAction(self.menuOpenDRIVE_Conversion.menuAction())
        self.menubar.addAction(self.menuData_Trimming.menuAction())
        self.menubar.addAction(self.menuData_Integrity.menuAction())
        self.menubar.addAction(self.menuMisc.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.treeWidget_data.headerItem().setText(0, _translate("MainWindow", "MGeo Data"))
        self.treeWidget_style.headerItem().setText(0, _translate("MainWindow", "MGeo Style"))
        self.btn_create_junction.setText(_translate("MainWindow", "Create Junction"))
        self.btn_add_line.setText(_translate("MainWindow", "Add Line"))
        self.btn_add_poly3.setText(_translate("MainWindow", "Add Poly3"))
        self.btn_merge_links.setText(_translate("MainWindow", "Merge Links"))
        self.btn_connect_nodes.setText(_translate("MainWindow", "Connect Nodes"))
        self.btn_divide_a_link.setText(_translate("MainWindow", "Divide a Link"))
        self.rbtn_view_select.setText(_translate("MainWindow", "Select"))
        self.rbtn_view_trans.setText(_translate("MainWindow", "Translate"))
        self.rbtn_view_rotate.setText(_translate("MainWindow", "Rotate"))
        self.btn_view_xy.setText(_translate("MainWindow", "XY"))
        self.btn_view_yz.setText(_translate("MainWindow", "YZ"))
        self.btn_view_zx.setText(_translate("MainWindow", "ZX"))
        self.label_x.setText(_translate("MainWindow", "X-axis"))
        self.reset_xRot.setText(_translate("MainWindow", "Reset"))
        self.label_y.setText(_translate("MainWindow", "Y-axis"))
        self.reset_yRot.setText(_translate("MainWindow", "Reset"))
        self.label_z.setText(_translate("MainWindow", "Z-axis"))
        self.reset_zRot.setText(_translate("MainWindow", "Reset"))
        self.label_range_x.setText(_translate("MainWindow", "TextLabel"))
        self.label_range_y.setText(_translate("MainWindow", "TextLabel"))
        self.label_zoom.setText(_translate("MainWindow", "TextLabel"))
        self.treeWidget_attr.headerItem().setText(0, _translate("MainWindow", "MGeo Attribute"))
        self.menuFiles.setTitle(_translate("MainWindow", "Files"))
        self.menuImport.setTitle(_translate("MainWindow", "Import"))
        self.menuFind.setTitle(_translate("MainWindow", "Find"))
        self.menuData_Integrity.setTitle(_translate("MainWindow", "Data Integrity"))
        self.menuData_Trimming.setTitle(_translate("MainWindow", "Data Trimming"))
        self.menuOpenDRIVE_Conversion.setTitle(_translate("MainWindow", "OpenDRIVE Conversion"))
        self.menuBasic_Editing.setTitle(_translate("MainWindow", "Basic Editing"))
        self.menuMisc.setTitle(_translate("MainWindow", "Misc"))
        self.menuCurve_Fitting.setTitle(_translate("MainWindow", "Curve Fitting"))
        self.menuExport.setTitle(_translate("MainWindow", "Export"))
        self.action_load_mgeo.setText(_translate("MainWindow", "Load MGeo"))
        self.action_save_mgeo.setText(_translate("MainWindow", "Save MGeo"))
        self.action_exit.setText(_translate("MainWindow", "Exit"))
        self.action_import_42dot.setText(_translate("MainWindow", "42dot HDMap (sdx, latest)"))
        self.action_export_odr_2.setText(_translate("MainWindow", "Save OpenDRIVE as File "))
        self.actionXY.setText(_translate("MainWindow", "XY"))
        self.actionYZ.setText(_translate("MainWindow", "YZ"))
        self.actionZX.setText(_translate("MainWindow", "ZX"))
        self.actionSoftware_Information.setText(_translate("MainWindow", "Software Information"))
        self.action_node.setText(_translate("MainWindow", "Node"))
        self.action_link.setText(_translate("MainWindow", "Link"))
        self.action_find_overlapped_node.setText(_translate("MainWindow", "Find Overlapped Node"))
        self.action_repair_overlapped_node.setText(_translate("MainWindow", "Repair Overlapped Node"))
        self.action_find_dangling_nodes.setText(_translate("MainWindow", "Find Dangling Nodes"))
        self.action_delete_dangling_nodes.setText(_translate("MainWindow", "Delete Dangling Node"))
        self.action_clear.setText(_translate("MainWindow", "Clear"))
        self.action_delete_Objects_out_of_XY_Range_soft.setText(_translate("MainWindow", "Delete Objects out of XY Range (soft)"))
        self.action_delete_Objects_inside_this_Screen.setText(_translate("MainWindow", "Delete Objects inside this Screen"))
        self.action_add_poly3.setText(_translate("MainWindow", "Add Poly3 Geometry Point"))
        self.action_ts.setText(_translate("MainWindow", "Traffic Sign"))
        self.action_tl.setText(_translate("MainWindow", "Traffic Light"))
        self.action_jct.setText(_translate("MainWindow", "Junction"))
        self.action_add_line.setText(_translate("MainWindow", "Add Line Geometry Point"))
        self.action_delete_current_point.setText(_translate("MainWindow", "Delete Current Point"))
        self.action_delete_all_points.setText(_translate("MainWindow", "Delete All Points"))
        self.actionMerge_Selected.setText(_translate("MainWindow", "Merge Selected Links"))
        self.actionCreate_Junction.setText(_translate("MainWindow", "Create Junction"))
        self.actionDelete_Current_Junction.setText(_translate("MainWindow", "Delete Current Junction"))
        self.action_create_preliminary_odr_roads.setText(_translate("MainWindow", "Create Road (Preliminary)"))
        self.action_create_junction.setText(_translate("MainWindow", "Create Junction"))
        self.action_delete_Objects_out_of_XY_Range_hard.setText(_translate("MainWindow", "Delete Objects out of XY Range (hard)"))
        self.actionFind.setText(_translate("MainWindow", "Find"))
        self.action_export_odr.setText(_translate("MainWindow", "OpenDRIVE (with signal)"))
        self.action_export_odr_signal_fix.setText(_translate("MainWindow", "OpenDRIVE (find all matching roads for signals)"))
        self.action_create_odr_roads.setText(_translate("MainWindow", "Create Road (incl. Ref Lines, Lane Sections, ...)"))
        self.action_create_road_objects_legacy.setText(_translate("MainWindow", "Create Road (Legacy)"))
        self.action_export_odr_legacy.setText(_translate("MainWindow", "OpenDRIVE (legacy)"))
        self.action_create_opendrive.setText(_translate("MainWindow", "Create OpenDRIVE"))
        self.action_create_opendrive_no_signal.setText(_translate("MainWindow", "Create OpenDRIVE (no signal)"))
        self.action_create_opendrive_fix_all_signal_road_id.setText(_translate("MainWindow", "Create OpenDRIVE (include signal, do search for matching road)"))
        self.action_create_opendrive_legacy.setText(_translate("MainWindow", "Create OpenDRIVE (legacy)"))
        self.action_road.setText(_translate("MainWindow", "Road"))
        self.action_change_ids_to_string.setText(_translate("MainWindow", "Change IDs to string"))
        self.action_find_closed_loop_link.setText(_translate("MainWindow", "Find Closed-loop Link"))
        self.action_auto_generate_geometry_points.setText(_translate("MainWindow", "Auto-generate Geometry Points"))
        self.action_merge_links.setText(_translate("MainWindow", "Merge Links"))
        self.action_connect_nodes.setText(_translate("MainWindow", "Connect Nodes"))
        self.action_divide_a_link_smart.setText(_translate("MainWindow", "Divide a Link (Smart)"))
        self.action_divide_a_link_keep_front.setText(_translate("MainWindow", "Divide a Link (Keep Front)"))
        self.action_divide_a_link_keep_rear.setText(_translate("MainWindow", "Divide a Link (Keep Rear)"))
        self.action_add_link_point.setText(_translate("MainWindow", "Add Link Point"))
        self.action_set_new_road_id.setText(_translate("MainWindow", "Set New Road ID"))
        self.action_clear_odr_roads.setText(_translate("MainWindow", "Clear Road"))
        self.action_get_position_in_carla.setText(_translate("MainWindow", "Get Position in CARLA"))
        self.action_change_node_link_height_to_0.setText(_translate("MainWindow", "Change Node / Link Height to 0"))
        self.action_import_42dot_legacy.setText(_translate("MainWindow", "42dot HDMap (sdx, legacy)"))
        self.actionMerge_MGeo.setText(_translate("MainWindow", "Merge MGeo"))
        self.action_reset_all_points.setText(_translate("MainWindow", "Reset All Points"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
